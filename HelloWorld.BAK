<html>
<head>
  <title>Twipne AIR</title>
  <script src="AIRAliases.js" type="text/javascript"></script>
  <script type="text/javascript">

function test_systemtray(){

  var iconLoadComplete = function(event) 
  { 
      air.NativeApplication.nativeApplication.icon.bitmaps = [event.target.content.bitmapData]; 
  } 
   
  air.NativeApplication.nativeApplication.autoExit = false; 
  var iconLoad = new air.Loader(); 
  var iconMenu = new air.NativeMenu(); 
  var exitCommand = iconMenu.addItem(new air.NativeMenuItem("Exit")); 

  exitCommand.addEventListener(air.Event.SELECT,function(event){ 
      air.NativeApplication.nativeApplication.icon.bitmaps = []; 
      saveAndExit();
  }); 



  if (air.NativeApplication.supportsSystemTrayIcon) {
    air.NativeApplication.nativeApplication.icon.addEventListener(window.runtime.flash.events.ScreenMouseEvent.CLICK,function(event){ 
    air.trace("systemtray click");
    
    //window.nativeWindow.visible = true;
    window.nativeWindow.activate();
    window.focus();
    window.nativeWindow.orderToFront()
    document.getElementById("twitterBody").focus();

  });

      air.NativeApplication.nativeApplication.autoExit = false; 
      iconLoad.contentLoaderInfo.addEventListener(air.Event.COMPLETE,iconLoadComplete); 
      iconLoad.load(new air.URLRequest("icons/AIRApp_16.png")); 
      air.NativeApplication.nativeApplication.icon.tooltip = "AIR application"; 
      air.NativeApplication.nativeApplication.icon.menu = iconMenu; 
  } 

  if (air.NativeApplication.supportsDockIcon) { 
      iconLoad.contentLoaderInfo.addEventListener(air.Event.COMPLETE,iconLoadComplete); 
      iconLoad.load(new air.URLRequest("icons/AIRApp_128.png")); 
      air.NativeApplication.nativeApplication.icon.menu = iconMenu; 
  } 

}


function saveAndExit(){

  air.trace(window.nativeWindow.x.toString());
  air.trace(window.nativeWindow.y.toString());

  var bytes = new air.ByteArray();
  bytes.writeUTFBytes(window.nativeWindow.x.toString());
  air.EncryptedLocalStore.setItem('x',bytes);

  var bytes = new air.ByteArray();
  bytes.writeUTFBytes(window.nativeWindow.y.toString());
  air.EncryptedLocalStore.setItem('y',bytes);

  var bytes = new air.ByteArray();
  bytes.writeUTFBytes(document.twitterForm.twitterId.value);
  air.EncryptedLocalStore.setItem('twitterId',bytes);

  var bytes = new air.ByteArray();
  bytes.writeUTFBytes(document.twitterForm.twitterPassword.value);
  air.EncryptedLocalStore.setItem('twitterPassword',bytes);

  air.NativeApplication.nativeApplication.exit(); 
}


function createRootMenu(){
    var menu = new air.NativeMenu();
    menu.addSubmenu(createFileMenu(),"File");
    menu.addSubmenu(createEditMenu(),"Edit");
    menu.addSubmenu(createHelpMenu(),"Help");
    return menu;
}

function createFileMenu(menuType){
    var temp;
    var menu = new air.NativeMenu();
    temp = menu.addItem(new air.NativeMenuItem("New"));
        temp.keyEquivalent = 'n';
        temp.data = menuType;
    temp = menu.addItem(new air.NativeMenuItem("Open"));
        temp.keyEquivalent = 'o';
        temp.data = menuType;
    temp = menu.addItem(new air.NativeMenuItem("Save"));
        temp.keyEquivalent = 's';
        temp.data = menuType;

    menu.addItem(new air.NativeMenuItem("",true));//セパレータ

    temp = menu.addItem(new air.NativeMenuItem(quitLabel));
        temp.keyEquivalent = 'q';
        temp.data = menuType;
  
    for (var item = 0; item < menu.items.length; item++){
        menu.items[item].addEventListener(air.Event.SELECT,itemSelected);
    } 
    return menu;
}



function appLoad(){ 
  //createRootMenu();
  test_loadlocation(event);
  test_systemtray();
  air.trace("App loaded"); 
  air.NativeApplication.nativeApplication.icon.tooltip = "Twipne AIR";
  window.nativeWindow.addEventListener(air.Event.CLOSING, saveAndExit);
  document.getElementById("twitterBody").focus();

}  

function twitter(event) { 
  air.trace("twitter() method");   
  var url = "http://api.twitter.com/1/statuses/update.xml";
  var service = new air.URLRequest(url);
  service.method = "POST";
  service.data = "status=" + document.twitterForm.twitterBody.value;

  air.URLRequestDefaults.setLoginCredentialsForHost("api.twitter.com",document.twitterForm.twitterId.value ,document.twitterForm.twitterPassword.value );
  var loader = new air.URLLoader();
  loader.load(service);
  air.trace(loader.data);

  document.twitterForm.twitterBody.value = "";
  document.getElementById("twitterBody").focus();
  return false;
}

function test(event){
  var conn = new air.SQLConnection();
  
  var dbFile = air.File.applicationStorageDirectory.resolvePath("DBSample.db");

  try{
    conn.open(dbFile);
    air.trace("conn.open() success");
  }catch(error){
    air.trace("Error message:", error.message); 
    air.trace("Details:", error.details); 
  }

  var stmt = new air.SQLStatement();
  stmt.sqlConnection = conn;
  //var sql = "CREATE TABLE IF NOT EXISTS options (key INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, value TEXT);";
  var sql = "insert into options (name,value) values ('tejima','gatagata')";
  stmt.text = sql;
  
  try{
    stmt.execute();
    air.trace("SUCCESS:" + sql);
  }catch(error){
    air.trace("Error message:", error.message); 
    air.trace("Details:", error.details); 
  }

  var sql = "select * from options;";
  var stmt = new air.SQLStatement();
  stmt.sqlConnection = conn;
  stmt.text = sql;
  
  try{
    stmt.execute();
    var result = stmt.getResult();
    var numResults = result.data.length;
    for(i = 0;i < numResults;i++){
      var row = result.data[i]; 
      var output = "name: " + row.name; 
      output += "; value: " + row.value; 
      air.trace(output);
    }
  air.trace("SUCCESS:" + sql);
  }catch(error){
    air.trace("Error message:", error.message); 
    air.trace("Details:", error.details); 
  }
}
function test2(event){
/*
  var password = "aaaaaaaa";
  var bytes = new air.ByteArray();
  bytes.writeUTFBytes(password);
  air.EncryptedLocalStore.setItem('password',bytes);
*/
  var storedValue = air.ByteArray = air.EncryptedLocalStore.getItem('password');
  air.trace(storedValue.readUTFBytes(storedValue.length));
}

function test3(event){
  //air.trace(air.NativeWindow.x);
  air.trace(window.nativeWindow.x);
  window.moveTo(100,100);
}

function test_savelocation(event){
  air.trace(window.nativeWindow.x.toString());
  air.trace(window.nativeWindow.y.toString());

  var bytes = new air.ByteArray();
  bytes.writeUTFBytes(window.nativeWindow.x.toString());
  air.EncryptedLocalStore.setItem('x',bytes);

  var bytes = new air.ByteArray();
  bytes.writeUTFBytes(window.nativeWindow.y.toString());
  air.EncryptedLocalStore.setItem('y',bytes);

  var bytes = new air.ByteArray();
  bytes.writeUTFBytes(document.twitterForm.twitterId.value);
  air.EncryptedLocalStore.setItem('twitterId',bytes);

  var bytes = new air.ByteArray();
  bytes.writeUTFBytes(document.twitterForm.twitterPassword.value);
  air.EncryptedLocalStore.setItem('twitterPassword',bytes);


}

function test_loadlocation(event){
  var storedValue = air.EncryptedLocalStore.getItem('x');
  storedValue? x = storedValue.readUTFBytes(storedValue.length) : x = 100;

  var storedValue = air.EncryptedLocalStore.getItem('y');
  storedValue? y = storedValue.readUTFBytes(storedValue.length) : y = 100;
  window.moveTo(x,y);

  var storedValue = air.EncryptedLocalStore.getItem('twitterId');
  storedValue? twitterId = storedValue.readUTFBytes(storedValue.length) : twitterId = "";

  var storedValue = air.EncryptedLocalStore.getItem('twitterPassword');
  storedValue? twitterPassword = storedValue.readUTFBytes(storedValue.length) : twitterPassword = "";

  document.twitterForm.twitterId.value = twitterId;
  document.twitterForm.twitterPassword.value = twitterPassword;

}
    </script> 
<style type="text/css">
<!--
#twitterBody { font-size: 0.9em; }
-->
</style>
</head>
<body onLoad="appLoad()" >
<form name="twitterForm" action="#" >
<textarea name="twitterBody" id="twitterBody" cols="40" rows="4"></textarea>
<br />
<input type="button" value="                     twitter POST                      " onClick="twitter(event)"/><br />
<input type="button" value="test" onClick="test_loadlocation(event)" />
<br />
<input type="text" name="twitterId" />:ID
<input type="password" name="twitterPassword" />:PASS
</form>
</body>
</html>


